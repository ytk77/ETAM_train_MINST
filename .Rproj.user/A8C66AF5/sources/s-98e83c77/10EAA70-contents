library(dplyr)
library(Rcpp)
library(doMC)
library(tictoc)
sourceCpp("fnc_ETAM_a_neuron.cpp")
source("load_MNIST.R")
source("fnc_Process.R")
registerDoMC(24)



X.train = load_image_file("data/train-images-idx3-ubyte") %>% as.matrix()
y1 = load_label_file("data/train-labels-idx1-ubyte")
Y.train = matrix(0, nrow(X.train), n_distinct(y1))
for (ii in 1:length(y1)) {
    Y.train[ii, y1[ii]+1] = 1
}
# # names(X.y) = paste0("y=", seq(0,9))
XY.train = cbind(X.train, Y.train) %>% fnc_hardlim()

## check training accuracy
fn <- "result/mnist_W_2019-02-11 02:45:18.rds"
W <- readRDS(fn)

# X1 = XY.train %>% fnc_hardlim()
x1 = head(XY.train, 1000)
# X1b = cbind(XY.train, -1)
X1b = cbind(x1, -1)

for (ii in 1:10) {
    tic()
    y0 = W %*% t(X1b)
    y1 = fnc_hardlim( t(y0) )
    X1b = cbind(y1, -1)    
    toc()
    print( sum( abs(x1 - y1)) )
}

# show_digit( head(X1b[1,],784) )
show_digit( head(y1[3,],784) )


# for (ii in 1:10) {
#     y0 = R1$W %*% t(y1) - R1$theta 
#     y1 = fnc_hardlim( t(y0) )
#     show_digit( head(y1[3,],784) )
#     Sys.sleep(0.5)    
# }
# 
# # sum(XY.train - y1)
# 
# c1 <- data.frame(A = XY.train[1,], B=y1[1,])
